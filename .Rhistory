networkMap$color[groupNames == "Short Interval"] <- "#56B4E9"
networkMap$color[groupNames == "Long Interval"] <- "#009E73"
net %v% "color" = networkMap$color
# Plot network
ggnet2(net, color = "color", size = "degree", alpha = 0.4,
edge.color = "grey", edge.size = "weight", mode = 'kamadakawai', ) +
guides(size = FALSE)
networkCoords <- ggnet2(net, color = "color", size = "degree", alpha = 0.4,
edge.color = "grey", edge.size = "weight", mode = 'kamadakawai')$data
degree(net)[groupNames == "Short Interval"] %>% mean(na.rm = TRUE) /2
rowSums(cluster_mat)[groupNames == "Short Interval"] %>% mean(na.rm = TRUE)
degree(net)[groupNames == "Long Interval"] %>% mean(na.rm = TRUE) /2
rowSums(cluster_mat)[groupNames == "Long Interval"] %>% mean(na.rm = TRUE)
degree(net)[groupNames == "No NACT Interval"] %>% mean(na.rm = TRUE) /2
rowSums(cluster_mat)[groupNames == "No NACT Interval"] %>% mean(na.rm = TRUE)
degree(net)[groupNames == "No NACT Interval"]
degree(net)[groupNames == "No NACT"] %>% mean(na.rm = TRUE) /2
rowSums(cluster_mat)[groupNames == "No NACT"] %>% mean(na.rm = TRUE)
temp1 <- rowSums(cluster_mat)[groupNames == "Short Interval"]
temp2 <- rowSums(cluster_mat)[groupNames == "No NACT"]
wilcox.test(temp1, temp2)
temp1
temp2
plot(temp1, temp2)
plot(temp1[1:20], temp21:20)
plot(temp1[1:20], temp[1:20)
plot(temp1[1:20], temp[1:20])
plot(temp1[1:20], temp2[1:20])
cluster_map
cluster_mat
cluster_mat[cluster_mat>0] <- 1
cluster_mat
temp2 <- rowSums(cluster_mat)[groupNames == "No NACT"]
temp1 <- rowSums(cluster_mat)[groupNames == "Short Interval"]
wilcox.test(temp1, temp2)
stringentCancerTCRs
view(stringentCancerTCRs)
# Plot network
ggnet2(net, color = "color", size = "degree", alpha = 0.4,
edge.color = "grey", edge.size = "weight", mode = 'kamadakawai', ) +
guides(size = FALSE)
# Plot network
ggnet2(net, color = "color", size = "degree", alpha = 0.4,
edge.color = "grey", edge.size = "weight", mode = 'kamadakawai') +
guides(size = FALSE)
degree(net)[groupNames == "Short Interval"] %>% mean(na.rm = TRUE) /2
rowSums(cluster_mat)[groupNames == "Short Interval"] %>% mean(na.rm = TRUE)
degree(net)[groupNames == "Long Interval"] %>% mean(na.rm = TRUE) /2
rowSums(cluster_mat)[groupNames == "Long Interval"] %>% mean(na.rm = TRUE)
degree(net)[groupNames == "No NACT"] %>% mean(na.rm = TRUE) /2
rowSums(cluster_mat)[groupNames == "No NACT"] %>% mean(na.rm = TRUE)
# Create dataframe with rows samples and columns clusters
df <- networkMap %>% group_by(cluster, repertoire_id) %>% summarize(duplicate_count=sum(duplicate_count))
cluster_mat <- pivot_wider(data = df, names_from = "cluster", values_from = "duplicate_count") %>% as.data.frame()
cluster_mat[is.na(cluster_mat)] <- 0
rownames(cluster_mat) <- cluster_mat$repertoire_id; cluster_mat$repertoire_id <- NULL
degree(net)[groupNames == "Short Interval"] %>% mean(na.rm = TRUE) /2
rowSums(cluster_mat)[groupNames == "Short Interval"] %>% mean(na.rm = TRUE)
degree(net)[groupNames == "Long Interval"] %>% mean(na.rm = TRUE) /2
rowSums(cluster_mat)[groupNames == "Long Interval"] %>% mean(na.rm = TRUE)
degree(net)[groupNames == "No NACT"] %>% mean(na.rm = TRUE) /2
rowSums(cluster_mat)[groupNames == "No NACT"] %>% mean(na.rm = TRUE)
stringentCancerTCRs$count %>% median
stringentCancerTCRs$count/stringentCancerTCRs$repertoires %>% median
stringentCancerTCRs$count/stringentCancerTCRs$repertoires
(stringentCancerTCRs$count/stringentCancerTCRs$repertoires) %>% median
stringentCancerTCRs$repertoires %>% median
test %>% view
stringentCancerTCRs <- test %>% group_by(cluster) %>% summarize(stringentCancer = sum(stringentCancer == "Yes"),
stringentNormal = sum(stringentNormal == "Yes"),
count = sum(duplicate_count),
repertoires = n_distinct(repertoire_id),
unique_aa = n_distinct(junction_aa)) %>%
filter(stringentCancer > stringentNormal) %>% arrange(-stringentCancer) %>%
filter(stringentNormal == 0) %>% filter(repertoires > 1)
view(stringentCancerTCRs)
source("~/Documents/GitHub/20.440-TCR-Analysis/src/analysis/Table1.R", echo=TRUE)
# Define custom theme for the main plot
custom_main_plot_theme <- theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title = element_text(face = "bold"),
legend.text = element_text(face = "bold"),
legend.title = element_text(face = "bold"))
# Plot the Kaplan-Meier curve using ggplot2
ggsurvplot(km_fit,
data = patients_data,
palette = c("#E69F00", "#56B4E9", "#009E73"),
risk.table = FALSE,
pval = FALSE,
conf.int = FALSE,
legend.labs = c("Long NACT", "No NACT", "Short NACT"),
xlab = "Months After Surgery",
ylab = "Survival probability",
ggtheme = custom_main_plot_theme)
# Plot the Kaplan-Meier curve using ggplot2
ggsurvplot(km_fit,
data = patients_data,
palette = c("#E69F00", "#56B4E9", "#009E73"),
risk.table = FALSE,
pval = TRUE,
conf.int = FALSE,
legend.labs = c("Long NACT", "No NACT", "Short NACT"),
xlab = "Months After Surgery",
ylab = "Survival probability",
ggtheme = custom_main_plot_theme)
view(metadata)
load("data/processed/metadata.RData")
view(metadata)
metadata$survivor
short_term <- df %>% filter(survivor == "Short Term")
df <- metadata
short_term <- df %>% filter(survivor == "Short Term")
df_norm <- df %>%
group_by(group_label) %>%
mutate_at(vars(-group_label),
~./short_term[short_term$group_label == "Short Term", -1]) %>%
ungroup()
df <- metadata
short_term <- df %>% filter(survivor == "Short Term")
df_norm <- df %>%
group_by(group_label) %>%
mutate_at(vars(-group_label),
~./short_term[short_term$survivor == "Short Term", -1]) %>%
ungroup()
df_norm <- df %>%
group_by(survivor) %>%
mutate_at(vars(-survivor),
~./short_term[short_term$survivor == "Short Term", -1]) %>%
ungroup()
df <- metadata %>% select(c(survivor, clusters, propCancer, aa_richness, cancerTCRsPerCluster))
df
short_term <- df %>% filter(survivor == "Short Term")
df_norm <- df %>%
group_by(survivor) %>%
mutate_at(vars(-survivor),
~./short_term[short_term$survivor == "Short Term", -1]) %>%
ungroup()
df_norm
df
df[is.na(df)] <- 0
df
df$clusters <- df$clusters/mean(df$clusters)
df$propCancer <- df$propCancer/mean(df$propCancer)
df$aa_richness <- df$aa_richness/mean(df$aa_richness)
df$cancerTCRsPerCluster <- df$cancerTCRsPerCluster/mean(df$cancerTCRsPerCluster)
df
df_long <- df %>%
tidyr::gather(variable, value, -survivor)
df_long
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
df$clusters %>% mean
df$clusters[survivor == "Long Term"]
df$clusters[survivors == "Long Term"]
df$clusters[df$survivor == "Long Term"]
df$clusters[df$survivor == "Long Term"] %>% mean
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_jitter() +
scale_fill_brewer(palette = "Set1")
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot() +
scale_fill_brewer(palette = "Set1")
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot() +
scale_fill_brewer(palette = "Set1") +
theme_classic2()
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot() +
scale_fill_brewer(palette = "Set1") +
theme_classic()
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot() +
scale_fill_brewer(palette = "Set1") +
theme_classic2()
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot() +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10()
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot() +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
scale_x_discrete(labels = c("Richness", "Cancer TCRs Per Cluster", "Clusters", "Proportion Cancer Associated")) +
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot() +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold")) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs Per Cluster", "Clusters", "Proportion Cancer Associated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot() +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold")) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs Per Cluster", "Clusters", "Proportion Cancer Associated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot() +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold")) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs Per Cluster", "Clusters", "Proportion Cancer Associated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.2) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold")) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs Per Cluster", "Clusters", "Proportion Cancer Associated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.5) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold")) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs Per Cluster", "Clusters", "Proportion Cancer Associated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.5) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold", angle  = 45)) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs Per Cluster", "Clusters", "Proportion Cancer Associated"))
axis.text.x = element_text(angle = 30) +
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.5) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text(angle = 30)) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs Per Cluster", "Clusters", "Proportion Cancer Associated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.5) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text(angle = 30)) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs Per Cluster", "Clusters", "Proportion Cancer Associated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.5) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text(angle = 30)) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Clusters", "Proportion Cancer \nAssociated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.5) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text(angle = 30, vjust = 0.5, hjust=1)) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Clusters", "Proportion Cancer \nAssociated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.5) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text(angle = 30, vjust = 0.5)) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Clusters", "Proportion Cancer \nAssociated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.5) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text(angle = 30, vjust = 0.2)) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Clusters", "Proportion Cancer \nAssociated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.5) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text(angle = 30, vjust = 1)) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Clusters", "Proportion Cancer \nAssociated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.5) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text(angle = 30, vjust = 0.8)) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Clusters", "Proportion Cancer \nAssociated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.5) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text()) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Clusters", "Proportion Cancer \nAssociated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.5) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text()) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Clusters", "Proportion \nCancer Associated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.5) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
scale_fill_manual(name = "",
labels = c("Short Term Surivors", "Long Term Survivors")) +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text()) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Clusters", "Proportion \nCancer Associated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.5) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
scale_fill_manual(values = c("#9AC9E3", "#EFC3E6"), name = "",
labels = c("Short Term Surivors", "Long Term Survivors")) +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text()) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Clusters", "Proportion \nCancer Associated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.5) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
scale_fill_manual(values = c("#FF9F80", "#C1E1C5"), name = "",
labels = c("Short Term Surivors", "Long Term Survivors")) +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text()) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Clusters", "Proportion \nCancer Associated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.8) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
scale_fill_manual(values = c("#FF9F80", "#C1E1C5"), name = "",
labels = c("Short Term Surivors", "Long Term Survivors")) +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text()) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Clusters", "Proportion \nCancer Associated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.6) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
scale_fill_manual(values = c("#FF9F80", "#C1E1C5"), name = "",
labels = c("Short Term Surivors", "Long Term Survivors")) +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text()) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Clusters", "Proportion \nCancer Associated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.4) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
scale_fill_manual(values = c("#FF9F80", "#C1E1C5"), name = "",
labels = c("Short Term Surivors", "Long Term Survivors")) +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text()) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Clusters", "Proportion \nCancer Associated"))
ggplot(df_long, aes(factor(variable), value, fill = survivor)) +
geom_boxplot(width = 0.4) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
scale_fill_manual(values = c("#FF9F80", "#C1E1C5"), name = "",
labels = c("Short Term Surivors", "Long Term Survivors")) +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text()) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Total\nClusters", "Proportion TCRs\nCancer Associated"))
df_long
df_long$variable %>% unique
ggplot(df_long, aes(factor(variable,
levels = c("aa_richness", "propCancer",
"clusters", "cancerTCRsPerCluster")),
value, fill = survivor)) +
geom_boxplot(width = 0.4) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
scale_fill_manual(values = c("#FF9F80", "#C1E1C5"), name = "",
labels = c("Short Term Surivors", "Long Term Survivors")) +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text()) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Total\nClusters", "Proportion TCRs\nCancer Associated"))
?factor
df_long$variable = factor(df_long$variable, levels = c("aa_richness", "propCancer",
"clusters", "cancerTCRsPerCluster"), ordered = TRUE)
ggplot(df_long, aes(variable,
value, fill = survivor)) +
geom_boxplot(width = 0.4) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
scale_fill_manual(values = c("#FF9F80", "#C1E1C5"), name = "",
labels = c("Short Term Surivors", "Long Term Survivors")) +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text()) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Total\nClusters", "Proportion TCRs\nCancer Associated"))
df_long$variable = factor(df_long$variable, levels = c("aa_richness", "propCancer",
"clusters", "cancerTCRsPerCluster"), ordered = TRUE)
ggplot(df_long, aes(variable,
value, fill = survivor)) +
geom_boxplot(width = 0.4) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
scale_fill_manual(values = c("#FF9F80", "#C1E1C5"), name = "",
labels = c("Short Term Surivors", "Long Term Survivors")) +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text()) +
scale_x_discrete(labels = c("Richness", "Cancer TCRs \nPer Cluster", "Total\nClusters", "Proportion TCRs\nCancer Associated"))
ggplot(df_long, aes(variable,
value, fill = survivor)) +
geom_boxplot(width = 0.4) +
scale_fill_brewer(palette = "Set1") +
theme_classic2() +
scale_y_log10() +
labs(x = "", y = "Relative Magnitude") +
scale_fill_manual(values = c("#FF9F80", "#C1E1C5"), name = "",
labels = c("Short Term Surivors", "Long Term Survivors")) +
theme(legend.position = "top",
axis.title = element_text(face = "bold"),
axis.text = element_text(face="bold"),
axis.text.x = element_text()) +
scale_x_discrete(labels = c("Richness", "Proportion TCRs\nCancer Associated", "Total\nClusters", "Cancer TCRs \nPer Cluster"))
